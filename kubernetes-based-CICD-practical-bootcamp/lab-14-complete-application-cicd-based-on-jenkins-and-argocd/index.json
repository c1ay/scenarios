{
  "title": "Complete application CICD based on Jenkins and Argocd",
  "type": "lab",
  "description": "The experiment provides instructions on how to combine Jenkins and ArgoCD to implement GitOps-based continuous deployment. Helm Charts are organized by creating an argocd-charts GitLab repository under the devops group with the rules \"project name/charts\". The configuration of the `go-hello-world` application for the development environment is added in go-hello-world/charts/dev.values.yaml. The original pipeline code is presented, which includes tools from org.devops, a Kubernetes agent with specific images, an environment, elastic beanstalk worker queue, and triggers. The pipeline uses Jenkins Shared Libraries to generate the development pipeline. The pipeline performs code compilation, image building and release, as well as deployment.",
  "difficulty": "Beginner",
  "time": 20,
  "details": {
    "steps": [
      {
        "title": "Organize Helm Chart",
        "text": "step1.md",
        "skills": [],
        "verify": [
          {
            "name": "verify",
            "file": "verify1.sh",
            "hint": "",
            "timeout": 0,
            "showstderr": false
          }
        ]
      },
      {
        "title": "Development Pipeline",
        "text": "step2.md",
        "skills": [],
        "verify": [
          {
            "name": "verify",
            "file": "verify2.sh",
            "hint": "",
            "timeout": 0,
            "showstderr": false
          }
        ]
      },
      {
        "title": "Deploy the application on Argocd",
        "text": "step3.md",
        "skills": [],
        "verify": [
          {
            "name": "verify",
            "file": "verify3.sh",
            "hint": "",
            "timeout": 0,
            "showstderr": false
          }
        ]
      },
      {
        "title": "Test",
        "text": "step4.md",
        "skills": [],
        "verify": [
          {
            "name": "verify",
            "file": "verify4.sh",
            "hint": "",
            "timeout": 0,
            "showstderr": false
          }
        ]
      }
    ],
    "intro": {
      "text": "intro.md",
      "background": "setup.sh"
    },
    "finish": {
      "text": "finish.md"
    },
    "assets": {
      "host01": []
    }
  },
  "backend": {
    "imageid": "vnc-ubuntu:2204"
  },
  "index": 14
}
